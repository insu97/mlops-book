name: Docker Image CI / CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

    - name: Build the Docker image
      run: docker build -t ${{ secrets.DOCKER_USER }}/book_mlops:latest .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USER }}/book_mlops:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

    - name: Deploy to Server via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          echo "Pulling latest Docker image..."
          docker pull ${{ secrets.DOCKER_USER }}/book_mlops:latest
          
          echo "Stopping and removing old container..."
          docker stop book_mlops || true
          docker rm book_mlops || true
          
          echo "Running new container..."
          docker run -d --name book_mlops -p 8000:8000 ${{ secrets.DOCKER_USER }}/book_mlops:latest

    # Kubernetes 배포 옵션 (필요할 경우)
    # - name: Set up kubectl
    #   uses: azure/setup-kubectl@v3
    #   with:
    #     version: "latest"

    # - name: Deploy to Kubernetes
    #   run: |
    #     kubectl set image deployment/book-mlops book-mlops=${{ secrets.DOCKER_USER }}/book_mlops:latest
    #     kubectl rollout status deployment/book-mlops
