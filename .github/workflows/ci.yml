name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      AIRFLOW_HOME: ./airflow_home
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:///${{ github.workspace }}/test_airflow.db
      AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS: "False"
      AIRFLOW__CORE__DAGS_FOLDER: ${{ github.workspace }}/airflow/dags

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        pip install -r airflow/requirements.txt
        pip install pytest
        
    - name: Initialize Airflow DB
      run: |
        # DAG 폴더 및 설정 파일 생성
        mkdir -p ${{ github.workspace }}/airflow/dags
        echo 'from airflow import DAG; dag = DAG("book_mlops")' > ${{ github.workspace }}/airflow/dags/book_mlops.py
        
        # Airflow 설정 강제 적용
        mkdir -p $AIRFLOW_HOME
        cat << EOF > $AIRFLOW_HOME/airflow.cfg
        [core]
        dags_folder = ${{ github.workspace }}/airflow/dags
        load_default_connections = False
        
        [database]
        sql_alchemy_conn = $AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
        EOF
        
        # DB 마이그레이션 실행
        airflow db migrate
        airflow connections create-default-connections

    - name: Validate DB schema
      run: |
        sqlite3 ${{ github.workspace }}/test_airflow.db ".tables"

    - name: Run tests
      run: |
        pytest tests/ -v -s --log-cli-level=DEBUG

  train:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Train model
        run: python -m models.book_recommend.train
