name: CI/CD for Book Recommendation Model

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Create shared network
      run: docker network create mlops_network || true
    
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        docker build -f airflow/Dockerfile -t book_mlops_model .

    - name: Start MariaDB (검색 결과 2,3,4,5 참조)
      run: |
        docker run -d --name mariadb \
          --network mlops_network \
          -e MYSQL_ROOT_PASSWORD=password \
          -e MYSQL_USER=user \
          -e MYSQL_PASSWORD=password \
          -e MYSQL_DATABASE=book_db \
          -p 3306:3306 \
          mariadb:10.8.2 \
          --bind-address=0.0.0.0

    - name: Wait for DB initialization (검색 결과 6 참조)
      run: |
        docker run --rm --network mlops_network mariadb:10.8.2 \
          mysqladmin ping -hmariadb -uuser -ppassword \
          --wait=90 --connect-timeout=45

    - name: Initialize Airflow DB (검색 결과 1,5 참조)
      run: |
        docker run --rm \
          --network mlops_network \
          -e AIRFLOW__DATABASE__SQL_ALCHEMY_CONN="mysql+pymysql://user:password@mariadb:3306/book_db" \
          book_mlops_model airflow db migrate

    - name: Verify DB schema (검색 결과 1 참조)
      run: |
        docker run --rm \
          --network mlops_network \
          -e AIRFLOW__DATABASE__SQL_ALCHEMY_CONN="mysql+pymysql://user:password@mariadb:3306/book_db" \
          book_mlops_model airflow db check

    - name: Run tests (검색 결과 1,5 참조)
      run: |
        docker run --rm \
          --network mlops_network \
          -e AIRFLOW__DATABASE__SQL_ALCHEMY_CONN="mysql+pymysql://user:password@mariadb:3306/book_db" \
          -e AIRFLOW__CORE__DAGS_FOLDER=/app/airflow/dags \
          book_mlops_model pytest tests/

    - name: Push Docker image
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
        docker tag book_mlops_model ${{ secrets.DOCKER_USER }}/book_mlops_model:latest
        docker push ${{ secrets.DOCKER_USER }}/book_mlops_model:latest

    - name: Deploy to production
      run: |
        docker pull ${{ secrets.DOCKER_USER }}/book_mlops_model:latest
        docker compose -f production.yml up -d
