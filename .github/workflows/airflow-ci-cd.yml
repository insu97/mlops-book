name: MLOps Book CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f airflow/requirements.txt ]; then
          pip install -r airflow/requirements.txt
        else
          echo "airflow/requirements.txt not found. Skipping dependency installation."
        fi
    - name: Run tests
      run: |
        python -m unittest discover tests

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f airflow/requirements.txt ]; then
          pip install -r airflow/requirements.txt
        else
          echo "airflow/requirements.txt not found. Skipping dependency installation."
        fi
    - name: Prepare package
      run: |
        echo "Preparing package for distribution"
        # 여기에 패키지 준비 명령어를 추가하세요 (예: 필요한 파일 복사 등)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f airflow/requirements.txt ]; then
          pip install -r airflow/requirements.txt
        else
          echo "airflow/requirements.txt not found. Skipping dependency installation."
        fi
    - name: Deploy to production
      run: |
        echo "Deploying to production environment"
        # 여기에 실제 배포 명령어를 추가하세요

